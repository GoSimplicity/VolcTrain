version: '3.8'

services:
  # 后端API服务
  backend-api:
    image: ${REGISTRY}/volctrain-backend:${TAG:-latest}
    container_name: volctrain-api
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT:-6379}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      SERVICE_NAME: volctrain-api
    ports:
      - "8888:8888"
    networks:
      - volctrain-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: ["api"]

  # 通用服务
  backend-common:
    image: ${REGISTRY}/volctrain-backend:${TAG:-latest}
    container_name: volctrain-common
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT:-6379}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      SERVICE_NAME: volctrain-common
    ports:
      - "8889:8889"
    networks:
      - volctrain-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: ["common"]

  # 监控服务
  backend-monitoring:
    image: ${REGISTRY}/volctrain-backend:${TAG:-latest}
    container_name: volctrain-monitoring
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT:-6379}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      SERVICE_NAME: volctrain-monitoring
    ports:
      - "8890:8890"
      - "9090:9090"
    networks:
      - volctrain-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: ["monitoring"]

  # 训练服务
  backend-training:
    image: ${REGISTRY}/volctrain-backend:${TAG:-latest}
    container_name: volctrain-training
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT:-6379}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      SERVICE_NAME: volctrain-training
      KUBECONFIG: /etc/kubeconfig/config
    ports:
      - "8891:8891"
    volumes:
      - ${KUBECONFIG_PATH}:/etc/kubeconfig/config:ro
    networks:
      - volctrain-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: ["training"]

  # 前端Web服务
  frontend:
    image: ${REGISTRY}/volctrain-frontend:${TAG:-latest}
    container_name: volctrain-frontend
    ports:
      - "80:80"
    depends_on:
      - backend-api
    networks:
      - volctrain-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  volctrain-network:
    external: true