apiVersion: apps/v1
kind: Deployment
metadata:
  name: volctrain-frontend
  namespace: volctrain
  labels:
    app: volctrain-frontend
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: volctrain-frontend
  template:
    metadata:
      labels:
        app: volctrain-frontend
        component: frontend
    spec:
      containers:
      - name: volctrain-frontend
        image: volctrain/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: volctrain-frontend-service
  namespace: volctrain
  labels:
    app: volctrain-frontend
spec:
  selector:
    app: volctrain-frontend
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: volctrain-ingress
  namespace: volctrain
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - volctrain.example.com
    secretName: volctrain-tls
  rules:
  - host: volctrain.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: volctrain-api-service
            port:
              number: 8888
      - path: /monitoring
        pathType: Prefix
        backend:
          service:
            name: volctrain-monitoring-service
            port:
              number: 8890
      - path: /
        pathType: Prefix
        backend:
          service:
            name: volctrain-frontend-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: volctrain-nodeport
  namespace: volctrain
  labels:
    app: volctrain-frontend
spec:
  selector:
    app: volctrain-frontend
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 30080
    protocol: TCP
  type: NodePort