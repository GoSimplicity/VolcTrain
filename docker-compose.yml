version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: volctrain-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/sql:/docker-entrypoint-initdb.d:ro
    networks:
      - volctrain-network
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-time-zone='+08:00'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: volctrain-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - volctrain-network
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端API服务
  backend-api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: volctrain-api
    environment:
      - DEPLOY_ENV=${DEPLOY_ENV}
    ports:
      - "${API_PORT}:8888"
    volumes:
      - ./data:/data
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - volctrain-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: ["api"]

  # 通用服务
  backend-common:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: volctrain-common
    environment:
      - DEPLOY_ENV=${DEPLOY_ENV}
    ports:
      - "${COMMON_PORT}:8889"
    volumes:
      - ./data:/data
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - volctrain-network
    restart: unless-stopped
    command: ["common"]

volumes:
  mysql_data:
  redis_data:

networks:
  volctrain-network:
    driver: bridge