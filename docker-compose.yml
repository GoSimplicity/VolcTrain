version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: volctrain-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: volctraindb
      MYSQL_USER: volctrain_app
      MYSQL_PASSWORD: Abc@1234
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/sql:/docker-entrypoint-initdb.d:ro
    networks:
      - volctrain-network
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-time-zone='+08:00'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: volctrain-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./deploy/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - volctrain-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端API服务
  backend-api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: volctrain-api
    env_file:
      - .env
    ports:
      - "8888:8888"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - volctrain-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: ["api"]

  # Prometheus监控 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: volctrain-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./deploy/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - volctrain-network
    restart: unless-stopped

  # Grafana可视化 (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: volctrain-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./deploy/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - volctrain-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  volctrain-network:
    driver: bridge