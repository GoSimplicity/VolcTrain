// Code generated by MockGen. DO NOT EDIT.
// Source: ../../model/vt_gpu_clusters_model.go
//
// Generated by this command:
//
//	mockgen -source=../../model/vt_gpu_clusters_model.go -destination=gpu_cluster_model_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	model "api/model"
	sql "database/sql"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockVtGpuClustersModel is a mock of VtGpuClustersModel interface.
type MockVtGpuClustersModel struct {
	ctrl     *gomock.Controller
	recorder *MockVtGpuClustersModelMockRecorder
	isgomock struct{}
}

// MockVtGpuClustersModelMockRecorder is the mock recorder for MockVtGpuClustersModel.
type MockVtGpuClustersModelMockRecorder struct {
	mock *MockVtGpuClustersModel
}

// NewMockVtGpuClustersModel creates a new mock instance.
func NewMockVtGpuClustersModel(ctrl *gomock.Controller) *MockVtGpuClustersModel {
	mock := &MockVtGpuClustersModel{ctrl: ctrl}
	mock.recorder = &MockVtGpuClustersModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVtGpuClustersModel) EXPECT() *MockVtGpuClustersModelMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockVtGpuClustersModel) Delete(id int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockVtGpuClustersModelMockRecorder) Delete(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockVtGpuClustersModel)(nil).Delete), id)
}

// FindAll mocks base method.
func (m *MockVtGpuClustersModel) FindAll(page, pageSize int, status, clusterType, region, search string) ([]*model.VtGpuClusters, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", page, pageSize, status, clusterType, region, search)
	ret0, _ := ret[0].([]*model.VtGpuClusters)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// FindAll indicates an expected call of FindAll.
func (mr *MockVtGpuClustersModelMockRecorder) FindAll(page, pageSize, status, clusterType, region, search any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockVtGpuClustersModel)(nil).FindAll), page, pageSize, status, clusterType, region, search)
}

// FindOne mocks base method.
func (m *MockVtGpuClustersModel) FindOne(id int64) (*model.VtGpuClusters, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindOne", id)
	ret0, _ := ret[0].(*model.VtGpuClusters)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindOne indicates an expected call of FindOne.
func (mr *MockVtGpuClustersModelMockRecorder) FindOne(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindOne", reflect.TypeOf((*MockVtGpuClustersModel)(nil).FindOne), id)
}

// Insert mocks base method.
func (m *MockVtGpuClustersModel) Insert(data *model.VtGpuClusters) (sql.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", data)
	ret0, _ := ret[0].(sql.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockVtGpuClustersModelMockRecorder) Insert(data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockVtGpuClustersModel)(nil).Insert), data)
}

// Update mocks base method.
func (m *MockVtGpuClustersModel) Update(data *model.VtGpuClusters) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockVtGpuClustersModelMockRecorder) Update(data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockVtGpuClustersModel)(nil).Update), data)
}
