syntax = "v1"

import "common.api"

// 数据集基础结构体
type Dataset {
	Id             int64       `json:"id"`
	Name           string      `json:"name"`                     // 数据集名称 (唯一)
	DisplayName    string      `json:"display_name,omitempty"`   // 数据集显示名称
	Description    string      `json:"description,omitempty"`    // 数据集描述
	DatasetType    string      `json:"dataset_type"`             // 数据集类型: image,text,audio,video,tabular,time_series,graph,mixed
	Format         string      `json:"format,omitempty"`         // 数据格式 (e.g., COCO, YOLO, CSV)
	Version        string      `json:"version"`                  // 当前默认版本
	TotalSize      int64       `json:"total_size"`               // 数据集总大小 (bytes)
	TotalCount     int         `json:"total_count"`              // 文件/样本总数
	TrainCount     int         `json:"train_count"`              // 训练集数量
	ValCount       int         `json:"val_count"`                // 验证集数量
	TestCount      int         `json:"test_count"`               // 测试集数量
	StorageType    string      `json:"storage_type"`             // 存储类型: local,s3,oss,hdfs,nfs,minio
	StoragePath    string      `json:"storage_path,omitempty"`   // 存储路径
	StorageConfig  interface{} `json:"storage_config,omitempty"` // 存储配置 (JSON)
	AnnotationType string      `json:"annotation_type,omitempty"`// 标注类型: classification,detection,segmentation,regression,nlp,custom,none
	LabelConfig    interface{} `json:"label_config,omitempty"`   // 标签配置 (JSON)
	Classes        interface{} `json:"classes,omitempty"`        // 类别列表 (JSON)
	QualityScore   float64     `json:"quality_score,omitempty"`  // 数据质量得分
	QualityReport  interface{} `json:"quality_report,omitempty"` // 数据质量报告 (JSON)
	DataProfile    interface{} `json:"data_profile,omitempty"`   // 数据画像/分析结果 (JSON)
	Status         string      `json:"status"`                   // 数据集状态: creating,processing,ready,error,archived
	Visibility     string      `json:"visibility"`               // 可见性: public,private,workspace,shared
	IsFeatured     int         `json:"is_featured"`              // 是否为精选数据集 (0:否, 1:是)
	DownloadCount  int         `json:"download_count"`           // 下载次数
	ViewCount      int         `json:"view_count"`               // 查看次数
	UsageCount     int         `json:"usage_count"`              // 使用次数
	StarCount      int         `json:"star_count"`               // 收藏/星标数
	Tags           interface{} `json:"tags,omitempty"`           // 标签 (JSON array of strings)
	Metadata       interface{} `json:"metadata,omitempty"`       // 自定义元数据 (JSON)
	SchemaConfig   interface{} `json:"schema_config,omitempty"`  // 数据模式配置 (JSON)
	CreatedAt      string      `json:"created_at"`               // 创建时间
	UpdatedAt      string      `json:"updated_at"`               // 更新时间
	DeletedAt      string      `json:"deleted_at,omitempty"`     // 删除时间
}

// 数据集版本结构体
type DatasetVersion {
	Id                  int64       `json:"id"`
	DatasetId           int64       `json:"dataset_id"`                     // 所属数据集ID
	Version             string      `json:"version"`                        // 版本号 (e.g., v1.0.0)
	VersionName         string      `json:"version_name,omitempty"`         // 版本名称 (e.g., "Initial Release")
	Description         string      `json:"description,omitempty"`          // 版本描述
	ChangeLog           string      `json:"change_log,omitempty"`           // 更新日志
	ParentVersionId     int64       `json:"parent_version_id,omitempty"`    // 父版本ID (用于版本衍化)
	TotalSize           int64       `json:"total_size"`                     // 版本总大小 (bytes)
	TotalCount          int         `json:"total_count"`                    // 文件/样本总数
	TrainCount          int         `json:"train_count"`                    // 训练集数量
	ValCount            int         `json:"val_count"`                      // 验证集数量
	TestCount           int         `json:"test_count"`                     // 测试集数量
	StoragePath         string      `json:"storage_path,omitempty"`         // 存储路径 (相对于数据集根目录)
	StorageConfig       interface{} `json:"storage_config,omitempty"`       // 存储配置 (JSON, 覆盖数据集级别配置)
	Checksum            string      `json:"checksum,omitempty"`             // 版本校验和 (e.g., MD5, SHA256)
	SplitConfig         interface{} `json:"split_config,omitempty"`         // 数据集划分配置 (JSON)
	TransformConfig     interface{} `json:"transform_config,omitempty"`     // 数据转换配置 (JSON)
	PreprocessingConfig interface{} `json:"preprocessing_config,omitempty"` // 数据预处理配置 (JSON)
	Status              string      `json:"status"`                         // 版本状态: creating,processing,ready,error,deprecated
	IsDefault           int         `json:"is_default"`                     // 是否为默认版本 (0:否, 1:是)
	CreatedAt           string      `json:"created_at"`                     // 创建时间
	UpdatedAt           string      `json:"updated_at"`                     // 更新时间
}

// 数据集文件结构体
type DatasetFile {
	Id               int64       `json:"id"`
	DatasetId        int64       `json:"dataset_id"`                 // 所属数据集ID
	VersionId        int64       `json:"version_id,omitempty"`       // 所属版本ID (可选)
	FileId           int64       `json:"file_id"`                    // 文件系统中的文件ID
	RelativePath     string      `json:"relative_path"`              // 文件相对路径
	FileType         string      `json:"file_type,omitempty"`        // 文件类型 (e.g., image, text)
	SplitType        string      `json:"split_type"`                 // 数据集划分类型: train,val,test,all,unlabeled
	Category         string      `json:"category,omitempty"`         // 类别/标签
	AnnotationStatus string      `json:"annotation_status"`          // 标注状态: unlabeled,labeled,verified,rejected
	AnnotationData   interface{} `json:"annotation_data,omitempty"`  // 标注数据 (JSON)
	AnnotationAt     string      `json:"annotation_at,omitempty"`    // 标注完成时间
	ProcessStatus    string      `json:"process_status"`             // 处理状态: pending,processing,completed,failed,skipped
	ProcessResult    interface{} `json:"process_result,omitempty"`   // 处理结果 (JSON)
	ErrorMessage     string      `json:"error_message,omitempty"`    // 错误信息
	QualityScore     float64     `json:"quality_score,omitempty"`    // 数据质量得分
	QualityIssues    interface{} `json:"quality_issues,omitempty"`   // 数据质量问题 (JSON)
	Metadata         interface{} `json:"metadata,omitempty"`         // 自定义元数据 (JSON)
	CreatedAt        string      `json:"created_at"`                 // 创建时间
	UpdatedAt        string      `json:"updated_at"`                 // 更新时间
}

// 数据集关联关系结构体
type DatasetRelation {
	Id           int64       `json:"id"`
	DatasetId    int64       `json:"dataset_id"`                     // 数据集ID
	EntityType   string      `json:"entity_type"`                    // 关联实体类型: workspace,user,model,training_job等
	EntityId     int64       `json:"entity_id"`                      // 关联实体ID
	RelationType string      `json:"relation_type"`                  // 关联关系类型: owner,creator,training_dataset,validation_dataset等
	WorkspaceId  int64       `json:"workspace_id,omitempty"`         // 工作空间ID
	IsPrimary    int         `json:"is_primary"`                     // 是否为主要关联 (0:否, 1:是)
	SortOrder    int         `json:"sort_order"`                     // 排序顺序
	Status       string      `json:"status"`                         // 关系状态: active,inactive,pending,deleted
	Metadata     interface{} `json:"metadata,omitempty"`             // 自定义元数据 (JSON)
	CreatedAt    string      `json:"created_at"`                     // 创建时间
	UpdatedAt    string      `json:"updated_at"`                     // 更新时间
}

// 数据集版本关联结构体
type DatasetVersionRelation {
	Id           int64  `json:"id"`
	VersionId    int64  `json:"version_id"`     // 数据集版本ID
	EntityType   string `json:"entity_type"`    // 关联实体类型
	EntityId     int64  `json:"entity_id"`      // 关联实体ID
	RelationType string `json:"relation_type"`  // 关联关系类型
	Status       string `json:"status"`         // 关系状态: active,inactive
	CreatedAt    string `json:"created_at"`     // 创建时间
}

// 数据集文件标注结构体
type DatasetFileAnnotation {
	Id                    int64       `json:"id"`
	DatasetFileId         int64       `json:"dataset_file_id"`              // 数据集文件ID
	UserId                int64       `json:"user_id"`                      // 标注用户ID
	AnnotationType        string      `json:"annotation_type"`              // 标注类型
	AnnotationStatus      string      `json:"annotation_status"`            // 标注状态: in_progress,completed,verified,rejected
	AnnotationData        interface{} `json:"annotation_data,omitempty"`    // 标注数据 (JSON)
	AnnotationTimeSeconds int         `json:"annotation_time_seconds,omitempty"` // 标注耗时 (秒)
	QualityScore          float64     `json:"quality_score,omitempty"`      // 标注质量得分
	ReviewComments        string      `json:"review_comments,omitempty"`    // 审核意见
	CreatedAt             string      `json:"created_at"`                   // 创建时间
	UpdatedAt             string      `json:"updated_at"`                   // 更新时间
}

// ==================== 请求和响应结构体 ====================

// 创建数据集请求
type CreateDatasetReq {
	Name           string      `json:"name" validate:"required"`         // 数据集名称 (唯一)
	DisplayName    string      `json:"display_name,omitempty"`           // 数据集显示名称
	Description    string      `json:"description,omitempty"`            // 数据集描述
	DatasetType    string      `json:"dataset_type" validate:"required"` // 数据集类型
	Format         string      `json:"format,omitempty"`                 // 数据格式
	Version        string      `json:"version,omitempty"`                // 初始版本号
	StorageType    string      `json:"storage_type,omitempty"`           // 存储类型
	StoragePath    string      `json:"storage_path,omitempty"`           // 存储路径
	StorageConfig  interface{} `json:"storage_config,omitempty"`         // 存储配置
	AnnotationType string      `json:"annotation_type,omitempty"`        // 标注类型
	LabelConfig    interface{} `json:"label_config,omitempty"`           // 标签配置
	Classes        interface{} `json:"classes,omitempty"`                // 类别列表
	Visibility     string      `json:"visibility,omitempty"`             // 可见性
	Tags           interface{} `json:"tags,omitempty"`                   // 标签
	Metadata       interface{} `json:"metadata,omitempty"`               // 自定义元数据
	SchemaConfig   interface{} `json:"schema_config,omitempty"`          // 数据模式配置
	WorkspaceId    int64       `json:"workspace_id,omitempty"`           // 所属工作空间ID
}

// 创建数据集响应
type CreateDatasetResp {
	Dataset Dataset `json:"dataset"` // 创建成功的数据集信息
}

// 更新数据集请求
type UpdateDatasetReq {
	Id             int64       `path:"id" validate:"required"`   // 数据集ID
	DisplayName    string      `json:"display_name,omitempty"`   // 数据集显示名称
	Description    string      `json:"description,omitempty"`    // 数据集描述
	Format         string      `json:"format,omitempty"`         // 数据格式
	StorageConfig  interface{} `json:"storage_config,omitempty"` // 存储配置
	AnnotationType string      `json:"annotation_type,omitempty"`// 标注类型
	LabelConfig    interface{} `json:"label_config,omitempty"`   // 标签配置
	Classes        interface{} `json:"classes,omitempty"`        // 类别列表
	Visibility     string      `json:"visibility,omitempty"`     // 可见性
	IsFeatured     int         `json:"is_featured,omitempty"`    // 是否为精选数据集
	Tags           interface{} `json:"tags,omitempty"`           // 标签
	Metadata       interface{} `json:"metadata,omitempty"`       // 自定义元数据
	SchemaConfig   interface{} `json:"schema_config,omitempty"`  // 数据模式配置
}

// 更新数据集响应
type UpdateDatasetResp {
	Dataset Dataset `json:"dataset"` // 更新后的数据集信息
}

// 获取数据集请求
type GetDatasetReq {
	Id int64 `path:"id" validate:"required"` // 数据集ID
}

// 获取数据集响应
type GetDatasetResp {
	Dataset Dataset `json:"dataset"` // 数据集详情
}

// 删除数据集请求
type DeleteDatasetReq {
	Id int64 `path:"id" validate:"required"` // 数据集ID
}

// 数据集列表请求
type ListDatasetsReq {
	Page        int    `form:"page,default=1"`             // 页码
	PageSize    int    `form:"page_size,default=10"`       // 每页数量
	DatasetType string `form:"dataset_type,omitempty"`     // 数据集类型过滤
	Status      string `form:"status,omitempty"`           // 状态过滤
	Visibility  string `form:"visibility,omitempty"`       // 可见性过滤
	IsFeatured  int    `form:"is_featured,omitempty"`      // 是否精选过滤
	WorkspaceId int64  `form:"workspace_id,omitempty"`     // 工作空间ID过滤
	Search      string `form:"search,omitempty"`           // 搜索关键词
	SortBy      string `form:"sort_by,default=created_at"` // 排序字段
	SortOrder   string `form:"sort_order,default=desc"`    // 排序顺序
}

// 数据集列表响应
type ListDatasetsResp {
	Datasets []Dataset `json:"datasets"`   // 数据集列表
	Total    int64     `json:"total"`      // 总数
	Page     int       `json:"page"`       // 当前页码
	PageSize int       `json:"page_size"`  // 每页数量
}

// 创建数据集版本请求
type CreateDatasetVersionReq {
	DatasetId           int64       `json:"dataset_id" validate:"required"` // 所属数据集ID
	Version             string      `json:"version" validate:"required"`    // 版本号
	VersionName         string      `json:"version_name,omitempty"`         // 版本名称
	Description         string      `json:"description,omitempty"`          // 版本描述
	ChangeLog           string      `json:"change_log,omitempty"`           // 更新日志
	ParentVersionId     int64       `json:"parent_version_id,omitempty"`    // 父版本ID
	StoragePath         string      `json:"storage_path,omitempty"`         // 存储路径
	StorageConfig       interface{} `json:"storage_config,omitempty"`       // 存储配置
	SplitConfig         interface{} `json:"split_config,omitempty"`         // 数据集划分配置
	TransformConfig     interface{} `json:"transform_config,omitempty"`     // 数据转换配置
	PreprocessingConfig interface{} `json:"preprocessing_config,omitempty"` // 数据预处理配置
	IsDefault           int         `json:"is_default,omitempty"`           // 是否设为默认版本
}

// 创建数据集版本响应
type CreateDatasetVersionResp {
	Version DatasetVersion `json:"version"` // 创建成功的数据集版本信息
}

// 获取数据集版本列表请求
type ListDatasetVersionsReq {
	DatasetId int64  `path:"dataset_id" validate:"required"` // 所属数据集ID
	Page      int    `form:"page,default=1"`                 // 页码
	PageSize  int    `form:"page_size,default=10"`           // 每页数量
	Status    string `form:"status,omitempty"`               // 状态过滤
}

// 获取数据集版本列表响应
type ListDatasetVersionsResp {
	Versions []DatasetVersion `json:"versions"`   // 版本列表
	Total    int64            `json:"total"`      // 总数
	Page     int              `json:"page"`       // 当前页码
	PageSize int              `json:"page_size"`  // 每页数量
}

// 获取数据集版本详情请求
type GetDatasetVersionReq {
	Id int64 `path:"id" validate:"required"` // 数据集版本ID
}

// 获取数据集版本详情响应
type GetDatasetVersionResp {
	Version DatasetVersion `json:"version"` // 数据集版本详情
}

// 删除数据集版本请求
type DeleteDatasetVersionReq {
	Id int64 `path:"id" validate:"required"` // 数据集版本ID
}

// 设置默认版本请求
type SetDefaultVersionReq {
	Id int64 `path:"id" validate:"required"` // 数据集版本ID
}

// 添加数据集文件请求
type AddDatasetFileReq {
	DatasetId    int64       `json:"dataset_id" validate:"required"`    // 所属数据集ID
	VersionId    int64       `json:"version_id,omitempty"`              // 所属版本ID (可选)
	FileId       int64       `json:"file_id" validate:"required"`       // 文件系统中的文件ID
	RelativePath string      `json:"relative_path" validate:"required"` // 文件相对路径
	FileType     string      `json:"file_type,omitempty"`               // 文件类型
	SplitType    string      `json:"split_type,omitempty"`              // 数据集划分类型
	Category     string      `json:"category,omitempty"`                // 类别/标签
	Metadata     interface{} `json:"metadata,omitempty"`                // 自定义元数据
}

// 添加数据集文件响应
type AddDatasetFileResp {
	DatasetFile DatasetFile `json:"dataset_file"` // 添加成功的数据集文件信息
}

// 获取数据集文件列表请求
type ListDatasetFilesReq {
	DatasetId        int64  `path:"dataset_id" validate:"required"` // 所属数据集ID
	VersionId        int64  `form:"version_id,omitempty"`           // 版本ID过滤 (可选)
	Page             int    `form:"page,default=1"`                 // 页码
	PageSize         int    `form:"page_size,default=20"`           // 每页数量
	SplitType        string `form:"split_type,omitempty"`           // 划分类型过滤
	AnnotationStatus string `form:"annotation_status,omitempty"`    // 标注状态过滤
	ProcessStatus    string `form:"process_status,omitempty"`       // 处理状态过滤
	Category         string `form:"category,omitempty"`             // 类别过滤
}

// 获取数据集文件列表响应
type ListDatasetFilesResp {
	Files    []DatasetFile `json:"files"`      // 文件列表
	Total    int64         `json:"total"`      // 总数
	Page     int           `json:"page"`       // 当前页码
	PageSize int           `json:"page_size"`  // 每页数量
}

// 更新文件标注状态请求
type UpdateFileAnnotationReq {
	Id               int64       `path:"id" validate:"required"`   // 数据集文件ID
	AnnotationStatus string      `json:"annotation_status,omitempty"`// 标注状态
	AnnotationData   interface{} `json:"annotation_data,omitempty"`  // 标注数据
	Category         string      `json:"category,omitempty"`         // 类别/标签
	QualityScore     float64     `json:"quality_score,omitempty"`    // 数据质量得分
	QualityIssues    interface{} `json:"quality_issues,omitempty"`   // 数据质量问题
}

// 更新文件标注状态响应
type UpdateFileAnnotationResp {
	DatasetFile DatasetFile `json:"dataset_file"` // 更新后的数据集文件信息
}

// 批量更新文件分割类型请求
type BatchUpdateFileSplitReq {
	DatasetId int64   `json:"dataset_id" validate:"required"` // 数据集ID
	FileIds   []int64 `json:"file_ids" validate:"required"`   // 文件ID列表
	SplitType string  `json:"split_type" validate:"required"` // 目标划分类型
}

// 数据集统计请求
type GetDatasetStatsReq {
	Id int64 `path:"id" validate:"required"` // 数据集ID
}

// 数据集统计信息结构体
type DatasetStats {
	TotalSize          int64       `json:"total_size"`           // 总大小
	TotalCount         int         `json:"total_count"`          // 总数量
	TrainCount         int         `json:"train_count"`          // 训练集数量
	ValCount           int         `json:"val_count"`            // 验证集数量
	TestCount          int         `json:"test_count"`           // 测试集数量
	AnnotatedCount     int         `json:"annotated_count"`      // 已标注数量
	UnlabeledCount     int         `json:"unlabeled_count"`      // 未标注数量
	QualityScore       float64     `json:"quality_score"`        // 平均质量分
	ClassDistribution  interface{} `json:"class_distribution"`   // 类别分布 (JSON)
	AnnotationProgress interface{} `json:"annotation_progress"`  // 标注进度 (JSON)
}

// 数据集统计响应
type GetDatasetStatsResp {
	Stats DatasetStats `json:"stats"` // 数据集统计信息
}

// 导出数据集请求
type ExportDatasetReq {
	Id                 int64    `path:"id" validate:"required"`           // 数据集ID
	VersionId          int64    `form:"version_id,omitempty"`             // 版本ID (可选, 默认最新)
	Format             string   `form:"format,default=zip"`               // 导出格式
	SplitTypes         []string `form:"split_types,omitempty"`            // 要导出的划分类型 (e.g., train, val)
	IncludeAnnotations bool     `form:"include_annotations,default=true"` // 是否包含标注信息
}

// 导出数据集响应
type ExportDatasetResp {
	DownloadUrl string `json:"download_url"` // 下载链接
	ExportId    string `json:"export_id"`    // 导出任务ID
}

// 收藏/取消收藏数据集请求
type StarDatasetReq {
	Id int64 `path:"id" validate:"required"` // 数据集ID
}

// 复制数据集请求
type CloneDatasetReq {
	Id           int64  `path:"id" validate:"required"`   // 源数据集ID
	Name         string `json:"name" validate:"required"`   // 新数据集名称
	DisplayName  string `json:"display_name,omitempty"`   // 新数据集显示名称
	Description  string `json:"description,omitempty"`    // 新数据集描述
	WorkspaceId  int64  `json:"workspace_id,omitempty"`   // 目标工作空间ID
	IncludeFiles bool   `json:"include_files,default=true"` // 是否复制文件
}

// 复制数据集响应
type CloneDatasetResp {
	Dataset Dataset `json:"dataset"` // 克隆成功的数据集信息
}

@server(
	group: dataset
	prefix: /api/v1/datasets
)
service common-api {
	// 数据集管理
	@handler CreateDataset
	post / (CreateDatasetReq) returns (CreateDatasetResp)

	@handler UpdateDataset
	put /:id (UpdateDatasetReq) returns (UpdateDatasetResp)

	@handler GetDataset
	get /:id (GetDatasetReq) returns (GetDatasetResp)

	@handler DeleteDataset
	delete /:id (DeleteDatasetReq) returns (EmptyResp)

	@handler ListDatasets
	get / (ListDatasetsReq) returns (ListDatasetsResp)

	@handler GetDatasetStats
	get /:id/stats (GetDatasetStatsReq) returns (GetDatasetStatsResp)

	@handler ExportDataset
	post /:id/export (ExportDatasetReq) returns (ExportDatasetResp)

	@handler StarDataset
	post /:id/star (StarDatasetReq) returns (EmptyResp)

	@handler UnstarDataset
	delete /:id/star (StarDatasetReq) returns (EmptyResp)

	@handler CloneDataset
	post /:id/clone (CloneDatasetReq) returns (CloneDatasetResp)

	// 数据集版本管理
	@handler CreateDatasetVersion
	post /:dataset_id/versions (CreateDatasetVersionReq) returns (CreateDatasetVersionResp)

	@handler ListDatasetVersions
	get /:dataset_id/versions (ListDatasetVersionsReq) returns (ListDatasetVersionsResp)

	@handler GetDatasetVersion
	get /versions/:id (GetDatasetVersionReq) returns (GetDatasetVersionResp)

	@handler DeleteDatasetVersion
	delete /versions/:id (DeleteDatasetVersionReq) returns (EmptyResp)

	@handler SetDefaultVersion
	put /versions/:id/default (SetDefaultVersionReq) returns (EmptyResp)

	// 数据集文件管理
	@handler AddDatasetFile
	post /:dataset_id/files (AddDatasetFileReq) returns (AddDatasetFileResp)

	@handler ListDatasetFiles
	get /:dataset_id/files (ListDatasetFilesReq) returns (ListDatasetFilesResp)

	@handler UpdateFileAnnotation
	put /files/:id (UpdateFileAnnotationReq) returns (UpdateFileAnnotationResp)

	@handler BatchUpdateFileSplit
	put /files/batch-split (BatchUpdateFileSplitReq) returns (EmptyResp)
}