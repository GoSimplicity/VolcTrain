-- 监控指标定义表
CREATE TABLE vt_monitor_metrics (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(128) NOT NULL COMMENT '指标名称',
    display_name VARCHAR(256) COMMENT '显示名称',
    description TEXT COMMENT '指标描述',
    metric_type ENUM('counter', 'gauge', 'histogram', 'summary') NOT NULL COMMENT '指标类型',
    data_type ENUM('integer', 'float', 'boolean', 'string') DEFAULT 'float' COMMENT '数据类型',
    category VARCHAR(64) COMMENT '指标类别',
    module VARCHAR(64) COMMENT '所属模块',
    source_type ENUM('system', 'application', 'business', 'custom') DEFAULT 'system' COMMENT '数据源类型',
    unit VARCHAR(32) COMMENT '单位',
    aggregation_type ENUM(
        'sum',
        'avg',
        'min',
        'max',
        'count',
        'last',
        'rate'
    ) DEFAULT 'avg' COMMENT '聚合方式',
    collection_interval_seconds INT DEFAULT 60 COMMENT '采集间隔(秒)',
    retention_days INT DEFAULT 30 COMMENT '保留天数',
    normal_range_min DECIMAL(20, 6) COMMENT '正常范围最小值',
    normal_range_max DECIMAL(20, 6) COMMENT '正常范围最大值',
    warning_threshold DECIMAL(20, 6) COMMENT '警告阈值',
    critical_threshold DECIMAL(20, 6) COMMENT '严重阈值',
    threshold_condition ENUM(
        'gt',
        'gte',
        'lt',
        'lte',
        'eq',
        'neq',
        'between',
        'outside'
    ) DEFAULT 'gt' COMMENT '阈值条件',
    status ENUM('active', 'inactive', 'deprecated') DEFAULT 'active' COMMENT '状态',
    is_builtin TINYINT(1) DEFAULT 0 COMMENT '是否内置指标',
    is_core TINYINT(1) DEFAULT 0 COMMENT '是否核心指标',
    default_labels JSON COMMENT '默认标签',
    dimensions JSON COMMENT '维度定义',
    metadata JSON COMMENT '元数据',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    UNIQUE KEY uk_name (name),
    INDEX idx_metric_type (metric_type),
    INDEX idx_category (category),
    INDEX idx_module (module),
    INDEX idx_source_type (source_type),
    INDEX idx_status (status),
    INDEX idx_is_builtin (is_builtin),
    INDEX idx_is_core (is_core)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '监控指标定义表';
-- 监控数据表
CREATE TABLE vt_monitor_data (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    metric_id BIGINT NOT NULL COMMENT '指标ID',
    resource_type VARCHAR(64) COMMENT '资源类型',
    resource_id BIGINT COMMENT '资源ID',
    resource_name VARCHAR(256) COMMENT '资源名称',
    instance_id VARCHAR(128) COMMENT '实例ID',
    labels JSON COMMENT '标签',
    value DECIMAL(20, 6) NOT NULL COMMENT '指标值',
    value_int BIGINT COMMENT '整数值',
    value_str TEXT COMMENT '字符串值',
    value_bool BOOLEAN COMMENT '布尔值',
    count_value BIGINT COMMENT '计数值',
    sum_value DECIMAL(20, 6) COMMENT '求和值',
    min_value DECIMAL(20, 6) COMMENT '最小值',
    max_value DECIMAL(20, 6) COMMENT '最大值',
    avg_value DECIMAL(20, 6) COMMENT '平均值',
    timestamp TIMESTAMP NOT NULL COMMENT '时间戳',
    collection_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '采集时间',
    quality_score DECIMAL(3, 2) DEFAULT 1.00 COMMENT '数据质量评分',
    is_anomaly TINYINT(1) DEFAULT 0 COMMENT '是否异常数据',
    metadata JSON COMMENT '元数据',
    INDEX idx_metric_id (metric_id),
    INDEX idx_resource (resource_type, resource_id),
    INDEX idx_instance_id (instance_id),
    INDEX idx_timestamp (timestamp),
    INDEX idx_metric_timestamp (metric_id, timestamp),
    INDEX idx_resource_timestamp (resource_type, resource_id, timestamp),
    INDEX idx_collection_time (collection_time),
    INDEX idx_is_anomaly (is_anomaly)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '监控数据表';
-- 通知模板表
CREATE TABLE vt_notification_templates (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(128) NOT NULL COMMENT '模板名称',
    display_name VARCHAR(256) COMMENT '显示名称',
    description TEXT COMMENT '模板描述',
    template_type ENUM('alert', 'report', 'reminder', 'custom') DEFAULT 'alert' COMMENT '模板类型',
    channel_type ENUM(
        'email',
        'sms',
        'webhook',
        'slack',
        'dingtalk',
        'wechat',
        'teams',
        'all'
    ) NOT NULL COMMENT '适用渠道类型',
    subject_template TEXT COMMENT '主题模板',
    body_template TEXT NOT NULL COMMENT '内容模板',
    html_template TEXT COMMENT 'HTML模板',
    variables JSON COMMENT '模板变量定义',
    default_values JSON COMMENT '默认值',
    format_type ENUM('text', 'html', 'markdown', 'json') DEFAULT 'text' COMMENT '格式类型',
    encoding VARCHAR(32) DEFAULT 'utf-8' COMMENT '编码',
    locale VARCHAR(16) DEFAULT 'zh-CN' COMMENT '语言区域',
    timezone VARCHAR(64) DEFAULT 'Asia/Shanghai' COMMENT '时区',
    status ENUM('active', 'inactive', 'deprecated') DEFAULT 'active' COMMENT '状态',
    is_default TINYINT(1) DEFAULT 0 COMMENT '是否默认模板',
    is_system TINYINT(1) DEFAULT 0 COMMENT '是否系统模板',
    version VARCHAR(32) DEFAULT 'v1.0' COMMENT '版本',
    parent_template_id BIGINT COMMENT '父模板ID',
    metadata JSON COMMENT '元数据',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    UNIQUE KEY uk_name (name),
    INDEX idx_template_type (template_type),
    INDEX idx_channel_type (channel_type),
    INDEX idx_status (status),
    INDEX idx_is_default (is_default),
    INDEX idx_is_system (is_system),
    INDEX idx_parent_template_id (parent_template_id)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '通知模板表';
-- 通知渠道表
CREATE TABLE vt_notification_channels (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(128) NOT NULL COMMENT '渠道名称',
    display_name VARCHAR(256) COMMENT '显示名称',
    description TEXT COMMENT '渠道描述',
    channel_type ENUM(
        'email',
        'sms',
        'webhook',
        'slack',
        'dingtalk',
        'wechat',
        'teams',
        'pagerduty',
        'custom'
    ) NOT NULL COMMENT '渠道类型',
    config JSON NOT NULL COMMENT '渠道配置',
    auth_config JSON COMMENT '认证配置',
    template_config JSON COMMENT '模板配置',
    rate_limit_per_minute INT DEFAULT 60 COMMENT '每分钟限制次数',
    rate_limit_per_hour INT DEFAULT 1000 COMMENT '每小时限制次数',
    rate_limit_per_day INT DEFAULT 10000 COMMENT '每天限制次数',
    retry_enabled TINYINT(1) DEFAULT 1 COMMENT '是否启用重试',
    max_retry_count INT DEFAULT 3 COMMENT '最大重试次数',
    retry_interval_seconds INT DEFAULT 60 COMMENT '重试间隔(秒)',
    alert_level_filter JSON COMMENT '告警级别过滤',
    time_filter JSON COMMENT '时间过滤',
    content_filter JSON COMMENT '内容过滤',
    status ENUM('active', 'inactive', 'error') DEFAULT 'active' COMMENT '渠道状态',
    last_used_at TIMESTAMP NULL COMMENT '最后使用时间',
    success_count INT DEFAULT 0 COMMENT '成功次数',
    error_count INT DEFAULT 0 COMMENT '失败次数',
    total_sent INT DEFAULT 0 COMMENT '总发送次数',
    test_enabled TINYINT(1) DEFAULT 1 COMMENT '是否启用测试',
    last_test_at TIMESTAMP NULL COMMENT '最后测试时间',
    test_result VARCHAR(512) COMMENT '测试结果',
    metadata JSON COMMENT '元数据',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    UNIQUE KEY uk_name (name),
    INDEX idx_channel_type (channel_type),
    INDEX idx_status (status),
    INDEX idx_last_used_at (last_used_at)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '通知渠道表';
-- 告警规则表
CREATE TABLE vt_alert_rules (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(128) NOT NULL COMMENT '规则名称',
    display_name VARCHAR(256) COMMENT '显示名称',
    description TEXT COMMENT '规则描述',
    rule_type ENUM(
        'threshold',
        'trend',
        'anomaly',
        'composite',
        'custom'
    ) DEFAULT 'threshold' COMMENT '规则类型',
    condition_expression TEXT NOT NULL COMMENT '条件表达式',
    query_expression TEXT COMMENT '查询表达式',
    warning_threshold DECIMAL(20, 6) COMMENT '警告阈值',
    critical_threshold DECIMAL(20, 6) COMMENT '严重阈值',
    threshold_condition ENUM(
        'gt',
        'gte',
        'lt',
        'lte',
        'eq',
        'neq',
        'between',
        'outside'
    ) DEFAULT 'gt' COMMENT '阈值条件',
    evaluation_window_seconds INT DEFAULT 300 COMMENT '评估窗口(秒)',
    evaluation_interval_seconds INT DEFAULT 60 COMMENT '评估间隔(秒)',
    trigger_duration_seconds INT DEFAULT 300 COMMENT '持续时间(秒)',
    recovery_duration_seconds INT DEFAULT 60 COMMENT '恢复时间(秒)',
    filter_labels JSON COMMENT '过滤标签',
    filter_resources JSON COMMENT '过滤资源',
    time_range_filter JSON COMMENT '时间范围过滤',
    alert_level ENUM('info', 'warning', 'critical', 'fatal') DEFAULT 'warning' COMMENT '告警级别',
    severity_score INT DEFAULT 1 COMMENT '严重程度评分(1-10)',
    notification_channels JSON COMMENT '通知渠道',
    notification_throttle_minutes INT DEFAULT 60 COMMENT '通知限流(分钟)',
    escalation_policy JSON COMMENT '升级策略',
    silence_duration_seconds INT DEFAULT 3600 COMMENT '静默时间(秒)',
    suppression_rules JSON COMMENT '抑制规则',
    dependency_rules JSON COMMENT '依赖规则',
    workspace_ids JSON COMMENT '适用工作空间ID列表',
    resource_scope JSON COMMENT '资源范围',
    status ENUM('active', 'inactive', 'paused') DEFAULT 'active' COMMENT '规则状态',
    trigger_count INT DEFAULT 0 COMMENT '触发次数',
    last_evaluation_at TIMESTAMP NULL COMMENT '最后评估时间',
    last_trigger_at TIMESTAMP NULL COMMENT '最后触发时间',
    metadata JSON COMMENT '元数据',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    UNIQUE KEY uk_name (name),
    INDEX idx_rule_type (rule_type),
    INDEX idx_alert_level (alert_level),
    INDEX idx_status (status),
    INDEX idx_last_evaluation_at (last_evaluation_at),
    INDEX idx_last_trigger_at (last_trigger_at)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '告警规则表';
-- 告警记录表
CREATE TABLE vt_alert_records (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    rule_id BIGINT NOT NULL COMMENT '规则ID',
    alert_id VARCHAR(128) NOT NULL COMMENT '告警ID',
    alert_name VARCHAR(256) NOT NULL COMMENT '告警名称',
    alert_level ENUM('info', 'warning', 'critical', 'fatal') DEFAULT 'warning' COMMENT '告警级别',
    severity_score INT DEFAULT 1 COMMENT '严重程度评分',
    message TEXT COMMENT '告警信息',
    summary VARCHAR(512) COMMENT '告警摘要',
    resource_type VARCHAR(64) COMMENT '资源类型',
    resource_id BIGINT COMMENT '资源ID',
    resource_name VARCHAR(256) COMMENT '资源名称',
    instance_id VARCHAR(128) COMMENT '实例ID',
    trigger_value DECIMAL(20, 6) COMMENT '触发值',
    threshold_value DECIMAL(20, 6) COMMENT '阈值',
    condition_expression TEXT COMMENT '触发条件',
    evaluation_data JSON COMMENT '评估数据',
    triggered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '触发时间',
    first_occurrence_at TIMESTAMP NULL COMMENT '首次发生时间',
    last_occurrence_at TIMESTAMP NULL COMMENT '最后发生时间',
    resolved_at TIMESTAMP NULL COMMENT '解决时间',
    acknowledged_at TIMESTAMP NULL COMMENT '确认时间',
    status ENUM(
        'firing',
        'resolved',
        'acknowledged',
        'suppressed',
        'silenced'
    ) DEFAULT 'firing' COMMENT '告警状态',
    occurrence_count INT DEFAULT 1 COMMENT '发生次数',
    resolution_notes TEXT COMMENT '解决备注',
    root_cause TEXT COMMENT '根本原因',
    notification_sent TINYINT(1) DEFAULT 0 COMMENT '是否已发送通知',
    notification_channels JSON COMMENT '通知渠道',
    notification_count INT DEFAULT 0 COMMENT '通知次数',
    last_notification_at TIMESTAMP NULL COMMENT '最后通知时间',
    escalation_level INT DEFAULT 0 COMMENT '升级级别',
    alert_group_id VARCHAR(128) COMMENT '告警组ID',
    correlation_id VARCHAR(128) COMMENT '关联ID',
    labels JSON COMMENT '标签',
    annotations JSON COMMENT '注解',
    context JSON COMMENT '上下文信息',
    metadata JSON COMMENT '元数据',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    UNIQUE KEY uk_alert_id (alert_id),
    INDEX idx_rule_id (rule_id),
    INDEX idx_alert_level (alert_level),
    INDEX idx_status (status),
    INDEX idx_resource (resource_type, resource_id),
    INDEX idx_triggered_at (triggered_at),
    INDEX idx_resolved_at (resolved_at),
    INDEX idx_alert_group_id (alert_group_id),
    INDEX idx_correlation_id (correlation_id)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '告警记录表';
-- 监控关联表
CREATE TABLE vt_monitor_relations (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    entity_type VARCHAR(64) NOT NULL COMMENT '实体类型',
    entity_id BIGINT NOT NULL COMMENT '实体ID',
    relation_entity_type VARCHAR(64) NOT NULL COMMENT '关联实体类型',
    relation_entity_id BIGINT NOT NULL COMMENT '关联实体ID',
    relation_type VARCHAR(64) NOT NULL COMMENT '关联类型',
    metadata JSON COMMENT '元数据',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    UNIQUE KEY uk_monitor_relation (
        entity_type,
        entity_id,
        relation_entity_type,
        relation_entity_id,
        relation_type
    ),
    INDEX idx_entity (entity_type, entity_id),
    INDEX idx_relation_entity (relation_entity_type, relation_entity_id),
    INDEX idx_relation_type (relation_type)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '监控关联表';