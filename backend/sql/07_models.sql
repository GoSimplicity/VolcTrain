-- 模型表
CREATE TABLE vt_models (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(128) NOT NULL COMMENT '模型名称',
    display_name VARCHAR(256) COMMENT '显示名称',
    description TEXT COMMENT '模型描述',
    model_type ENUM(
        'classification',
        'detection',
        'segmentation',
        'nlp',
        'generative',
        'recommendation',
        'time_series',
        'custom'
    ) NOT NULL COMMENT '模型类型',
    framework ENUM(
        'pytorch',
        'tensorflow',
        'onnx',
        'keras',
        'sklearn',
        'huggingface',
        'paddlepaddle',
        'mindspore',
        'custom'
    ) NOT NULL COMMENT '框架类型',
    framework_version VARCHAR(64) COMMENT '框架版本',
    architecture VARCHAR(128) COMMENT '模型架构',
    base_model VARCHAR(128) COMMENT '基础模型',
    model_family VARCHAR(128) COMMENT '模型系列',
    version VARCHAR(32) DEFAULT '1.0.0' COMMENT '版本号',
    version_description TEXT COMMENT '版本说明',
    is_latest TINYINT(1) DEFAULT 1 COMMENT '是否最新版本',
    model_size_mb DECIMAL(12, 2) COMMENT '模型大小(MB)',
    parameter_count BIGINT COMMENT '参数数量',
    flops BIGINT COMMENT '浮点运算数',
    model_depth INT COMMENT '模型深度',
    accuracy DECIMAL(8, 6) COMMENT '准确率',
    precision_score DECIMAL(8, 6) COMMENT '精确率',
    recall DECIMAL(8, 6) COMMENT '召回率',
    f1_score DECIMAL(8, 6) COMMENT 'F1分数',
    auc_score DECIMAL(8, 6) COMMENT 'AUC分数',
    loss_value DECIMAL(15, 8) COMMENT '损失值',
    inference_time_ms DECIMAL(10, 2) COMMENT '推理时间(毫秒)',
    throughput_qps DECIMAL(12, 2) COMMENT '吞吐量(QPS)',
    storage_type ENUM('local', 's3', 'oss', 'registry', 'git_lfs') DEFAULT 'local' COMMENT '存储类型',
    storage_path VARCHAR(512) COMMENT '存储路径',
    input_shape JSON COMMENT '输入形状',
    output_shape JSON COMMENT '输出形状',
    input_dtype VARCHAR(32) COMMENT '输入数据类型',
    output_dtype VARCHAR(32) COMMENT '输出数据类型',
    input_format VARCHAR(64) COMMENT '输入格式',
    output_format VARCHAR(64) COMMENT '输出格式',
    training_config JSON COMMENT '训练配置',
    hyperparameters JSON COMMENT '超参数',
    training_metrics JSON COMMENT '训练指标',
    training_duration_hours DECIMAL(8, 2) COMMENT '训练时长(小时)',
    status ENUM(
        'training',
        'trained',
        'testing',
        'ready',
        'deploying',
        'deployed',
        'error',
        'archived',
        'deprecated'
    ) DEFAULT 'training' COMMENT '模型状态',
    visibility ENUM('public', 'private', 'workspace', 'shared') DEFAULT 'private' COMMENT '可见性',
    is_featured TINYINT(1) DEFAULT 0 COMMENT '是否推荐模型',
    is_verified TINYINT(1) DEFAULT 0 COMMENT '是否已验证',
    deployment_count INT DEFAULT 0 COMMENT '部署次数',
    active_deployments INT DEFAULT 0 COMMENT '活跃部署数',
    download_count INT DEFAULT 0 COMMENT '下载次数',
    view_count INT DEFAULT 0 COMMENT '查看次数',
    usage_count INT DEFAULT 0 COMMENT '使用次数',
    star_count INT DEFAULT 0 COMMENT '收藏次数',
    fork_count INT DEFAULT 0 COMMENT '分叉次数',
    dependencies JSON COMMENT '依赖库',
    requirements JSON COMMENT '环境要求',
    docker_image VARCHAR(256) COMMENT 'Docker镜像',
    python_version VARCHAR(16) COMMENT 'Python版本',
    cuda_version VARCHAR(16) COMMENT 'CUDA版本',
    license VARCHAR(128) COMMENT '许可证',
    license_url VARCHAR(512) COMMENT '许可证URL',
    ethical_considerations TEXT COMMENT '伦理考虑',
    bias_report JSON COMMENT '偏见报告',
    tags JSON COMMENT '标签',
    metadata JSON COMMENT '元数据',
    readme TEXT COMMENT '说明文档',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    deleted_at TIMESTAMP NULL COMMENT '软删除时间',
    INDEX idx_model_type (model_type),
    INDEX idx_framework (framework),
    INDEX idx_architecture (architecture),
    INDEX idx_status (status),
    INDEX idx_visibility (visibility),
    INDEX idx_is_featured (is_featured),
    INDEX idx_is_verified (is_verified),
    INDEX idx_created_at (created_at),
    INDEX idx_deleted_at (deleted_at),
    INDEX idx_type_framework (model_type, framework),
    INDEX idx_status_visibility (status, visibility)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '模型表';
-- 模型版本表
CREATE TABLE vt_model_versions (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    model_id BIGINT NOT NULL COMMENT '模型ID',
    version VARCHAR(32) NOT NULL COMMENT '版本号',
    version_name VARCHAR(128) COMMENT '版本名称',
    description TEXT COMMENT '版本描述',
    change_log TEXT COMMENT '变更日志',
    parent_version_id BIGINT COMMENT '父版本ID',
    version_type ENUM('major', 'minor', 'patch', 'hotfix') DEFAULT 'minor' COMMENT '版本类型',
    model_size_mb DECIMAL(12, 2) COMMENT '模型大小(MB)',
    model_hash VARCHAR(128) COMMENT '模型文件哈希',
    checksum VARCHAR(128) COMMENT '校验和',
    accuracy DECIMAL(8, 6) COMMENT '准确率',
    precision_score DECIMAL(8, 6) COMMENT '精确率',
    recall DECIMAL(8, 6) COMMENT '召回率',
    f1_score DECIMAL(8, 6) COMMENT 'F1分数',
    auc_score DECIMAL(8, 6) COMMENT 'AUC分数',
    inference_time_ms DECIMAL(10, 2) COMMENT '推理时间(毫秒)',
    throughput_qps DECIMAL(12, 2) COMMENT '吞吐量(QPS)',
    memory_usage_mb DECIMAL(10, 2) COMMENT '内存使用(MB)',
    training_config JSON COMMENT '训练配置',
    hyperparameters JSON COMMENT '超参数',
    training_metrics JSON COMMENT '训练指标',
    evaluation_results JSON COMMENT '评估结果',
    benchmark_results JSON COMMENT '基准测试结果',
    status ENUM(
        'training',
        'trained',
        'testing',
        'ready',
        'deprecated',
        'error'
    ) DEFAULT 'training' COMMENT '版本状态',
    is_default TINYINT(1) DEFAULT 0 COMMENT '是否默认版本',
    is_stable TINYINT(1) DEFAULT 0 COMMENT '是否稳定版本',
    framework_version VARCHAR(64) COMMENT '框架版本',
    python_version VARCHAR(16) COMMENT 'Python版本',
    cuda_version VARCHAR(16) COMMENT 'CUDA版本',
    dependencies JSON COMMENT '依赖库',
    docker_image VARCHAR(256) COMMENT 'Docker镜像',
    compatibility JSON COMMENT '兼容性信息',
    migration_guide TEXT COMMENT '迁移指南',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    UNIQUE KEY uk_model_version (model_id, version),
    INDEX idx_model_id (model_id),
    INDEX idx_version (version),
    INDEX idx_version_type (version_type),
    INDEX idx_status (status),
    INDEX idx_is_default (is_default),
    INDEX idx_is_stable (is_stable),
    INDEX idx_created_at (created_at),
    INDEX idx_parent_version_id (parent_version_id)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '模型版本表';
-- 模型部署表
CREATE TABLE vt_model_deployments (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    model_id BIGINT NOT NULL COMMENT '模型ID',
    version_id BIGINT NOT NULL COMMENT '版本ID',
    deployment_name VARCHAR(128) NOT NULL COMMENT '部署名称',
    deployment_type ENUM('api', 'batch', 'edge', 'streaming', 'a_b_test') DEFAULT 'api' COMMENT '部署类型',
    environment ENUM(
        'development',
        'testing',
        'staging',
        'production'
    ) DEFAULT 'development' COMMENT '环境',
    service_name VARCHAR(128) COMMENT '服务名称',
    service_port INT DEFAULT 8080 COMMENT '服务端口',
    protocol ENUM('http', 'https', 'grpc', 'tcp') DEFAULT 'http' COMMENT '协议',
    base_path VARCHAR(256) DEFAULT '/' COMMENT '基础路径',
    cpu_cores DECIMAL(6, 3) COMMENT 'CPU核心数',
    memory_gb DECIMAL(8, 2) COMMENT '内存(GB)',
    gpu_count INT DEFAULT 0 COMMENT 'GPU数量',
    gpu_type VARCHAR(64) COMMENT 'GPU类型',
    storage_gb DECIMAL(8, 2) COMMENT '存储(GB)',
    min_replicas INT DEFAULT 1 COMMENT '最小副本数',
    max_replicas INT DEFAULT 1 COMMENT '最大副本数',
    auto_scaling TINYINT(1) DEFAULT 0 COMMENT '是否自动扩容',
    scaling_policy JSON COMMENT '扩容策略',
    target_cpu_utilization INT DEFAULT 70 COMMENT '目标CPU使用率',
    target_memory_utilization INT DEFAULT 70 COMMENT '目标内存使用率',
    target_qps INT COMMENT '目标QPS',
    endpoint_url VARCHAR(512) COMMENT '访问端点',
    internal_endpoint VARCHAR(512) COMMENT '内部端点',
    load_balancer_type VARCHAR(64) COMMENT '负载均衡类型',
    ingress_config JSON COMMENT 'Ingress配置',
    docker_image VARCHAR(256) COMMENT 'Docker镜像',
    command JSON COMMENT '启动命令',
    args JSON COMMENT '命令参数',
    environment_vars JSON COMMENT '环境变量',
    volume_mounts JSON COMMENT '挂载卷',
    config_maps JSON COMMENT '配置映射',
    secrets JSON COMMENT '密钥配置',
    health_check_path VARCHAR(256) DEFAULT '/health' COMMENT '健康检查路径',
    readiness_probe JSON COMMENT '就绪探针',
    liveness_probe JSON COMMENT '存活探针',
    startup_probe JSON COMMENT '启动探针',
    status ENUM(
        'deploying',
        'running',
        'updating',
        'stopped',
        'failed',
        'terminating'
    ) DEFAULT 'deploying' COMMENT '部署状态',
    health_status ENUM('healthy', 'unhealthy', 'unknown') DEFAULT 'unknown' COMMENT '健康状态',
    replica_count INT DEFAULT 0 COMMENT '当前副本数',
    ready_replicas INT DEFAULT 0 COMMENT '就绪副本数',
    available_replicas INT DEFAULT 0 COMMENT '可用副本数',
    current_qps DECIMAL(12, 2) DEFAULT 0 COMMENT '当前QPS',
    avg_response_time_ms DECIMAL(10, 2) DEFAULT 0 COMMENT '平均响应时间(毫秒)',
    p99_response_time_ms DECIMAL(10, 2) DEFAULT 0 COMMENT 'P99响应时间(毫秒)',
    error_rate_percent DECIMAL(5, 2) DEFAULT 0 COMMENT '错误率',
    cpu_usage_percent DECIMAL(5, 2) DEFAULT 0 COMMENT 'CPU使用率',
    memory_usage_percent DECIMAL(5, 2) DEFAULT 0 COMMENT '内存使用率',
    gpu_usage_percent DECIMAL(5, 2) DEFAULT 0 COMMENT 'GPU使用率',
    rate_limit_rpm INT COMMENT '每分钟请求限制',
    quota_limit_per_day INT COMMENT '每日配额限制',
    concurrent_requests_limit INT COMMENT '并发请求限制',
    deployed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '部署时间',
    last_updated_at TIMESTAMP NULL COMMENT '最后更新时间',
    stopped_at TIMESTAMP NULL COMMENT '停止时间',
    traffic_split JSON COMMENT '流量分割配置',
    canary_config JSON COMMENT '金丝雀部署配置',
    metadata JSON COMMENT '元数据',
    deployment_config JSON COMMENT '部署配置',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    UNIQUE KEY uk_deployment_name (deployment_name),
    INDEX idx_model_id (model_id),
    INDEX idx_version_id (version_id),
    INDEX idx_deployment_type (deployment_type),
    INDEX idx_environment (environment),
    INDEX idx_status (status),
    INDEX idx_health_status (health_status),
    INDEX idx_deployed_at (deployed_at)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '模型部署表';
-- 模型推理日志表
CREATE TABLE vt_model_inference_logs (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    deployment_id BIGINT NOT NULL COMMENT '部署ID',
    model_id BIGINT NOT NULL COMMENT '模型ID',
    version_id BIGINT NOT NULL COMMENT '版本ID',
    request_id VARCHAR(128) NOT NULL COMMENT '请求ID',
    client_ip VARCHAR(64) COMMENT '客户端IP',
    user_agent TEXT COMMENT '用户代理',
    request_method VARCHAR(16) COMMENT '请求方法',
    request_path VARCHAR(512) COMMENT '请求路径',
    input_data JSON COMMENT '输入数据',
    output_data JSON COMMENT '输出数据',
    inference_time_ms DECIMAL(10, 2) COMMENT '推理时间(毫秒)',
    total_time_ms DECIMAL(10, 2) COMMENT '总时间(毫秒)',
    status ENUM('success', 'error', 'timeout') DEFAULT 'success' COMMENT '状态',
    error_message TEXT COMMENT '错误信息',
    http_status_code INT COMMENT 'HTTP状态码',
    request_time TIMESTAMP NOT NULL COMMENT '请求时间',
    response_time TIMESTAMP NULL COMMENT '响应时间',
    metadata JSON COMMENT '元数据',
    INDEX idx_deployment_id (deployment_id),
    INDEX idx_model_id (model_id),
    INDEX idx_version_id (version_id),
    INDEX idx_request_id (request_id),
    INDEX idx_status (status),
    INDEX idx_request_time (request_time)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '模型推理记录表';
-- 模型关联关系表 (通用关联表，替代各种外键关系)
CREATE TABLE vt_model_relations (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    model_id BIGINT NOT NULL COMMENT '模型ID',
    entity_type VARCHAR(64) NOT NULL COMMENT '实体类型(workspace, user, dataset, training_job, file等)',
    entity_id BIGINT NOT NULL COMMENT '实体ID',
    relation_type VARCHAR(64) NOT NULL COMMENT '关联类型(workspace, owner, creator, training_dataset, validation_dataset, test_dataset, training_job, model_file, config_file, weights_file, tokenizer_file等)',
    is_primary TINYINT(1) DEFAULT 0 COMMENT '是否主要关联',
    sort_order INT DEFAULT 0 COMMENT '排序',
    status ENUM('active', 'inactive', 'pending', 'deleted') DEFAULT 'active' COMMENT '状态',
    metadata JSON COMMENT '元数据',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
    UNIQUE KEY uk_model_entity_relation (model_id, entity_type, entity_id, relation_type),
    INDEX idx_model_id (model_id),
    INDEX idx_entity (entity_type, entity_id),
    INDEX idx_relation_type (relation_type),
    INDEX idx_status (status),
    INDEX idx_entity_relation (entity_type, relation_type)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '模型关联关系表';
-- 模型版本关联表
CREATE TABLE vt_model_version_relations (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    version_id BIGINT NOT NULL COMMENT '版本ID',
    entity_type VARCHAR(64) NOT NULL COMMENT '实体类型(user, file等)',
    entity_id BIGINT NOT NULL COMMENT '实体ID',
    relation_type VARCHAR(64) NOT NULL COMMENT '关联类型(created_by, model_file, config_file, weights_file等)',
    status ENUM('active', 'inactive') DEFAULT 'active' COMMENT '状态',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    UNIQUE KEY uk_version_entity_relation (
        version_id,
        entity_type,
        entity_id,
        relation_type
    ),
    INDEX idx_version_id (version_id),
    INDEX idx_entity (entity_type, entity_id),
    INDEX idx_relation_type (relation_type),
    INDEX idx_status (status)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '模型版本关联表';
-- 模型部署关联表
CREATE TABLE vt_model_deployment_relations (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    deployment_id BIGINT NOT NULL COMMENT '部署ID',
    entity_type VARCHAR(64) NOT NULL COMMENT '实体类型(workspace, user等)',
    entity_id BIGINT NOT NULL COMMENT '实体ID',
    relation_type VARCHAR(64) NOT NULL COMMENT '关联类型(workspace, deployed_by等)',
    status ENUM('active', 'inactive') DEFAULT 'active' COMMENT '状态',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    UNIQUE KEY uk_deployment_entity_relation (
        deployment_id,
        entity_type,
        entity_id,
        relation_type
    ),
    INDEX idx_deployment_id (deployment_id),
    INDEX idx_entity (entity_type, entity_id),
    INDEX idx_relation_type (relation_type),
    INDEX idx_status (status)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '模型部署关联表';
-- 模型推理日志关联表
CREATE TABLE vt_model_inference_relations (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    inference_log_id BIGINT NOT NULL COMMENT '推理日志ID',
    entity_type VARCHAR(64) NOT NULL COMMENT '实体类型(user, workspace, api_key等)',
    entity_id BIGINT NOT NULL COMMENT '实体ID',
    relation_type VARCHAR(64) NOT NULL COMMENT '关联类型(user, workspace, api_key等)',
    metadata JSON COMMENT '元数据',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    UNIQUE KEY uk_inference_entity_relation (
        inference_log_id,
        entity_type,
        entity_id,
        relation_type
    ),
    INDEX idx_inference_log_id (inference_log_id),
    INDEX idx_entity (entity_type, entity_id),
    INDEX idx_relation_type (relation_type),
    INDEX idx_entity_relation (entity_type, relation_type)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '模型推理日志关联表';